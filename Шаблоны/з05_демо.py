
# СПОСОБ 1 (нужно проверерять края диапазона - в этом случае это сложно)
# 1) Убираем три бита в конце и получаем первоначальный диапазон
res1 = int(bin(1987654321)[2:-3], 2) - int(bin(123456789)[2:-3], 2)
# 2) Это и должно быть ответом, но нужно проверять крайние значения!
print(res1)
# Поэтому результат без проверки оказывается ошибочным!


# СПОСОБ 2
# 1) находим кол-во чисел в конечном диапазоне
kol = 1987654321 - 123456789 + 1
# 2) т.к. изменение двоичного кода идёт начиная от числа N
# а к нему добавляются еще три бита, но нам не важно какие они
# т.к. число уже уникально из-за изменения самого N.
res2 = kol // 8
print(res2)
# В данном случае проверка не требуется, т.к. мы можем даже
# добавить или убрать (+1) т.е. проверить края именно так.


"""
# Решение "в лоб, перебором" СЛИШКОМ ДОЛГО!!!
print(bin(123456789)[2:-3], bin(1987654321)[2:-3])
print(int(bin(123456789)[2:-3], 2), int(bin(1987654321)[2:-3], 2))

res = 0
s2 = 0
for N in range(15432000, 248457000):
    # for N in range(1, 100):
    s = bin(N)[2:]
    # print(s)
    if sum([int(i) for i in str(N)]) % 2 == 0:
        s += "0"
    else:
        s += "1"
    # print(s)
    for _ in range(2):
        if sum([int(i) for i in str(int(s, 2))]) % 2 == 0:
            s += "0"
        else:
            s += "1"
        # print(s)
    # if 123456789 <= int(s, 2) <= 1987654321:
    #     # print(int(s, 2))
    #     res += 1
    # print(int(s, 2), s, int(s, 2) - s2)
    print((N - 15432000) / (248457000 - 15432000) * 100)
    s2 = int(s, 2)

print(res)

"""

